{
	"info": {
		"_postman_id": "a5227069-519b-4baf-b9b6-8625481d5d0c",
		"name": "Books",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33687523"
	},
	"item": [
		{
			"name": "GET Books",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARER}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/api/v1/books",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"books"
					]
				},
				"description": "### Get Books\n\nThis endpoint makes an HTTP GET request to localhost:8000/api/v1/books to retrieve a list of books.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will include a list of books with their details such as title, author, publication date, and other relevant information."
			},
			"response": []
		},
		{
			"name": "GET Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARER}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/api/v1/books/1",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"books",
						"1"
					]
				},
				"description": "# Get Book Details\n\nThis endpoint makes an HTTP GET request to localhost:8000/api/v1/books/1 to retrieve the details of a specific book.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response\n\n- `id`: The unique identifier of the book.\n- `title`: The title of the book.\n- `author`: The author of the book.\n- `genre`: The genre of the book.\n- `published_date`: The date when the book was published.\n    \n\nExample:\n\n``` json\n{\n    \"id\": 1,\n    \"title\": \"Book Title\",\n    \"author\": \"Author Name\",\n    \"genre\": \"Fiction\",\n    \"published_date\": \"2022-01-01\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "POST Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARER}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"data\": {\r\n        \"attributes\": {\r\n            \"title\": \"New boook 3\",\r\n            \"description\": \"Some description\",\r\n            \"published_year\": \"2024\"\r\n        },\r\n        \"relationships\": {\r\n            \"author\": {\r\n                \"data\": {\r\n                    \"ids\": [\r\n                        2\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/api/v1/books",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"books"
					]
				},
				"description": "## Add Book\n\nThis endpoint allows you to add a new book to the database.\n\n### Request Body\n\n- `title` (string, required): The title of the book.\n- `description` (string, required): A brief description of the book.\n- `published_year` (string, required): The year in which the book was published.\n- `author` (array, required): An array containing the ID of the author of the book.\n    \n\n#### Example\n\n``` json\n{\n  \"data\": {\n    \"attributes\": {\n      \"title\": \"Sample Title\",\n      \"description\": \"Sample Description\",\n      \"published_year\": \"2022\"\n    },\n    \"relationships\": {\n      \"author\": {\n        \"data\": {\n          \"ids\": [0]\n        }\n      }\n    }\n  }\n}\n\n ```\n\n### Response\n\nThe response will contain the details of the newly added book."
			},
			"response": []
		},
		{
			"name": "PUT Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARER}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"data\": {\r\n        \"attributes\": {\r\n            \"title\": \"New boook 1\",\r\n            \"description\": \"Some description\",\r\n            \"published_year\": \"2023\"\r\n        },\r\n        \"relationships\": {\r\n            \"author\": {\r\n                \"data\": {\r\n                    \"ids\": [\r\n                        1,\r\n                        2\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/api/v1/books/1",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"books",
						"1"
					]
				},
				"description": "This endpoint makes an HTTP PUT request to update the details of a specific book with ID 1. The request body should be in raw format and include the following payload structure:\n\n``` json\n{\n  \"data\": {\n    \"attributes\": {\n      \"title\": \"\",\n      \"description\": \"\",\n      \"published_year\": \"\"\n    },\n    \"relationships\": {\n      \"author\": {\n        \"data\": {\n          \"ids\": [0]\n        }\n      }\n    }\n  }\n}\n\n ```\n\nThe `title`, `description`, and `published_year` are the attributes of the book that can be updated. The `author` relationship can also be modified by providing the corresponding `ids`.\n\nThe response to this request will contain the updated details of the book, including the modified attributes and relationships."
			},
			"response": []
		},
		{
			"name": "Delete Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{BEARER}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8000/api/v1/books/1",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"books",
						"1"
					]
				},
				"description": "# Delete Book\n\nThis endpoint is used to delete a specific book by its ID.\n\n## Request\n\n- Method: DELETE\n- Endpoint: `localhost:8000/api/v1/books/1`\n    \n\n## Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response contains a message indicating the result of the delete operation."
			},
			"response": []
		}
	]
}